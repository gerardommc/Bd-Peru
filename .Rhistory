predictors=predictors,
control.mcmc=mcmc.1,
type="joint",
scale.predictions="prevalence",
standard.errors=TRUE,
scale.thresholds="prevalence",
thresholds = c(0.025, 0.19, 0.5, 0.69, 0.975))
plot(pred.MCML, type = "prevalence")
prevalence <- rast(data.frame(grid.pred, prevalence = pred.MCML$prevalence$predictions))
exceed <- rast(data.frame(grid.pred, pred.MCML$exceedance.prob))
proj4string(prevalence) <- CRS(proj4string(lst))
#writing up results
writeRaster(prevalence, "Prevalence-maps/Prevalence-median-GeoStat.tif")
for(i in 1:5)writeRaster(exceed[[i]], paste0("Prevalence-maps/Exceedence-prob-", c("025", "19", "50" , "69", "975")[i], ".tif"))
summary(fit.MCML.1)
dir.create("Model-results")
saveRDS(fit.MCML.1, "Model-results/Bd-GeoStat-Prevalence.rds")
# Chelsa PCA
library(terra)
library(tidyr)
chelsa <- rast(list.files("../Chelsa/", "tif", full.names = T))
ch <- list(chelsa[[1]], chelsa[[2]])
rast(ch)
plot(ch)
plot(rast(ch))
# Chelsa PCA
library(terra)
library(tidyr)
chelsa <- rast(list.files("../Chelsa/", "tif", full.names = T))
dir.create("../Chelsa/PCA")
rp <- data.frame(x = runif(50000, -180.0, 180.0), y = runif(50000, -90.0, 90.0))
samples <- terra::extract(chelsa, rp) |> data.frame()
library(doParallel)
registerDoParallel(cores = 4)
samples <- foreach(i = 1:19, .combine = cbind) %dopar% {terra::extract(chelsa[[i]], rp) |> data.frame()}
samples <- samples[, -1] |> as.data.frame() |> na.omit()
head(samples)
chels.m <- colMeans(samples)
chels.sd <- apply(samples, 2, sd)
samples.cent <- sweep(samples, 2, chels.m, FUN = "-")
samples.scale <- sweep(samples.cent, 2, chels.sd, FUN = "/")
head(samples.scale)
chels.scale <- foreach(i = 1:19) %dopar% {
cent <- chelsa[[i]] - chels.m[i]
scale <- cent/chels.sd[i]
return(scale)
}
chels.scale <- rast(chels.scale)
chels.scale <- foreach(i = 1:19, .combine = c) %dopar% {chels.scale[[i]]}
chels.scale1 <- c(chels.scale[[1]], chels.scale[[1]])
chels.scale1 <- c(chels.scale[[1]], chels.scale[[2]])
chels.scale1 <- c(chels.scale[[1]], chels.scale[[2]], chels.scale[[3]], chels.scale[[4]],
chels.scale[[5]], chels.scale[[6]], chels.scale[[7]], chels.scale[[4]],
chels.scale[[9]], chels.scale[[10]], chels.scale[[11]], chels.scale[[12]],
chels.scale[[13]], chels.scale[[14]], chels.scale[[15]], chels.scale[[16]],
chels.scale[[17]], chels.scale[[18]], chels.scale[[19]])
chels.scale <- c(chels.scale[[1]], chels.scale[[2]], chels.scale[[3]], chels.scale[[4]],
chels.scale[[5]], chels.scale[[6]], chels.scale[[7]], chels.scale[[4]],
chels.scale[[9]], chels.scale[[10]], chels.scale[[11]], chels.scale[[12]],
chels.scale[[13]], chels.scale[[14]], chels.scale[[15]], chels.scale[[16]],
chels.scale[[17]], chels.scale[[18]], chels.scale[[19]])
pca <- princomp(samples.scale)
saveRDS(pca, "Environment-raster/Chelsa-PCA-results.rds")
rm(chelsa); rm(chels.cent)
rm(chelsa); rm(chels.scale1)
gc(reset = T)
plot(chels.scale[[1]])
plot(chels.scale[[1]])
chels.scale <- c(chels.scale[[1]], chels.scale[[2]], chels.scale[[3]], chels.scale[[4]],
chels.scale[[5]], chels.scale[[6]], chels.scale[[7]], chels.scale[[4]],
chels.scale[[9]], chels.scale[[10]], chels.scale[[11]], chels.scale[[12]],
chels.scale[[13]], chels.scale[[14]], chels.scale[[15]], chels.scale[[16]],
chels.scale[[17]], chels.scale[[18]], chels.scale[[19]])
plot(chels.scale[[1]])
plot(chels.scale)
class(chels.scale)
chels.scale <- foreach(i = 1:19) %dopar% {
cent <- chelsa[[i]] - chels.m[i]
scale <- cent/chels.sd[i]
return(scale)
}
chelsa <- rast(list.files("../Chelsa/", "tif", full.names = T))
dir.create("../Chelsa/PCA")
chels.scale <- foreach(i = 1:19) %dopar% {
cent <- chelsa[[i]] - chels.m[i]
scale <- cent/chels.sd[i]
return(scale)
}
gc(reset = T)
# Chelsa PCA
library(terra)
library(tidyr)
chelsa <- rast(list.files("../Chelsa/", "tif", full.names = T))
dir.create("../Chelsa/PCA")
rp <- data.frame(x = runif(50000, -180.0, 180.0), y = runif(50000, -90.0, 90.0))
library(doParallel)
registerDoParallel(cores = 4)
chelsa.ag <- foreach(i = 1:19, .combine = c) %dopar% {
aggregate(chelsa[[i]], 5)
}
chelsa.ag <- foreach(i = 1:19) %dopar% {
aggregate(chelsa[[i]], 5)
}
plot(chelsa.ag[[1]])
plot(chelsa.ag[[1]])
class(chelsa.ag)
class(chelsa.ag[[1]])
plot(chelsa.ag[[1]])
plot(chelsa.ag[[1]])
chelsa.ag1 <- rast(chelsa.ag)
class(chelsa.ag1)
chels.ag1 <- c(chels.ag[[1]], chels.ag[[2]], chels.ag[[3]], chels.ag[[4]],
chels.ag[[5]], chels.ag[[6]], chels.ag[[7]], chels.ag[[4]],
chels.ag[[9]], chels.ag[[10]], chels.ag[[11]], chels.ag[[12]],
chels.ag[[13]], chels.ag[[14]], chels.ag[[15]], chels.ag[[16]],
chels.ag[[17]], chels.ag[[18]], chels.ag[[19]])
chelsa.ag1 <- c(chelsa.ag[[1]], chelsa.ag[[2]], chelsa.ag[[3]], chelsa.ag[[4]],
chelsa.ag[[5]], chelsa.ag[[6]], chelsa.ag[[7]], chelsa.ag[[4]],
chelsa.ag[[9]], chelsa.ag[[10]], chelsa.ag[[11]], chelsa.ag[[12]],
chelsa.ag[[13]], chelsa.ag[[14]], chelsa.ag[[15]], chelsa.ag[[16]],
chelsa.ag[[17]], chelsa.ag[[18]], chelsa.ag[[19]])
samples <- foreach(i = 1:19, .combine = cbind) %dopar% {terra::extract(chelsa.ag[[i]], rp) |> data.frame()}
library(doParallel)
registerDoParallel(cores = 4)
samples <- foreach(i = 1:19, .combine = cbind) %dopar% {terra::extract(chelsa.ag[[i]], rp) |> data.frame()}
chelsa.ag$pointer
chelsa.ag <- aggregate(chelsa[[i]], 5)
chelsa.ag <- aggregate(chelsa, 5)
samples <- foreach(i = 1:19, .combine = cbind) %dopar% {terra::extract(chelsa.ag[[i]], rp) |> data.frame()}
samples <- samples[, -1] |> as.data.frame() |> na.omit()
head(samples)
samples <- foreach(i = 1:19, .combine = cbind) %dopar% {terra::extract(chelsa.ag[[i]], rp)[, -1] |> data.frame()}
head(samples)
samples <- samples |> as.data.frame() |> na.omit()
head(samples)
names(samples) <- names(chelsa)
head(samples)
chels.m <- colMeans(samples)
chels.sd <- apply(samples, 2, sd)
samples.cent <- sweep(samples, 2, chels.m, FUN = "-")
samples.scale <- sweep(samples.cent, 2, chels.sd, FUN = "/")
chels.scale <- (chelsa.ag - chels.m)/chels.sd
pca <- princomp(samples.scale)
saveRDS(pca, "Environment-raster/Chelsa-PCA-results.rds")
rm(chelsa); gc(reset = T)
chels.pca <- predict(chels.scale, pca, index = 1:10)
for(i in 1:10){writeRaster(chels.pca[[i]], paste0("../Chelsa/PCA/Chelsa-PCA-", i, ".tif"))}
library(terra)
library(ntbox)
library(foreach)
# Occurrence data
bd.per <- read.csv("BD-occurrence/Peru/Bd-prevalence-data.csv")
bd.glob <- read.csv("BD-occurrence/Global/Bd-global-data.csv")
chels.pca <- rast(list.files("../Chelsa/PCA", "tif", full.names = T))
peru <- vect("../Admin-layers/PER_adm0.shp")
ref.r <- rast("Prevalence-maps/Prevalence-median-GeoStat.tif")
chels.peru <- crop(chels.pca, extent(peru))
chels.peru <- crop(chels.pca, peru)
peru <- vect("../Admin-layers/PER_adm0.shp")
peru <- vect("Admin-layers/gadm41_PER.gpkg")
plot(peru)
ref.r <- rast("Prevalence-maps/Prevalence-median-GeoStat.tif")
chels.peru <- crop(chels.pca, peru)
chels.peru <- project(chels.peru, crs(ref.r))
chels.peru <- terra::mask(chels.peru, ref.r)
chels.peru <- resample(chels.peru, ref.r)
chels.peru <- terra::mask(chels.peru, ref.r)
plot(chels.peru)
crs(ref.r)
library(terra)
library(ntbox)
library(foreach)
# Occurrence data
bd.per <- read.csv("BD-occurrence/Peru/Bd-prevalence-data.csv")
bd.glob <- read.csv("BD-occurrence/Global/Bd-global-data.csv")
chels.pca <- rast(list.files("../Chelsa/PCA", "tif", full.names = T))
crs(chels.pca)
peru <- vect("Admin-layers/gadm41_PER.gpkg", 1)
peru <- vect("Admin-layers/gadm41_PER.gpkg")
ref.r <- rast("Prevalence-maps/Prevalence-median-GeoStat.tif")
library(raster)
library(ntbox)
library(foreach)
# Occurrence data
bd.per <- read.csv("BD-occurrence/Peru/Bd-prevalence-data.csv")
bd.glob <- read.csv("BD-occurrence/Global/Bd-global-data.csv")
chels.pca <- rast(list.files("../../Chelsa/PCA", "tif", full.names = T))
chels.pca <- rast(list.files("../Chelsa/PCA", "tif", full.names = T))
peru <- readOGR("Admin-layers/gadm41_PER.gpkg")
library(terra)
library(ntbox)
library(foreach)
# Occurrence data
bd.per <- read.csv("BD-occurrence/Peru/Bd-prevalence-data.csv")
bd.glob <- read.csv("BD-occurrence/Global/Bd-global-data.csv")
chels.pca <- rast(list.files("../Chelsa/PCA", "tif", full.names = T))
peru <- vect("Admin-layers/gadm41_PER.gpkg")
ref.r <- raster("Prevalence-maps/Prevalence-median-GeoStat.tif")
chels.peru <- crop(chels.pca, peru)
plot(chels.peru[[1]])
b <- chels.peru[[1]]
b <- mask(b, peru)
plot(b)
crs(b)
b1 <- project(b, crs("EPSG:5369"))
plot(b1)
plot(b1)
b1
plot(b1)
plot(b)
b1 <- project(b, crs("EPSG:24892"))
plot(b1)
plot(ref.r)
crs(ref.r) <- crs("EPSG:24892")
chels.peru <- crop(chels.pca, peru)
chels.peru <- project(chels.peru, crs(ref.r))
chels.peru <- project(chels.peru, crs(ref.r))
chels.peru <- terra::mask(chels.peru, ref.r)
chels.peru <- mask(chels.peru, ref.r)
library(terra)
library(ntbox)
library(foreach)
# Occurrence data
bd.per <- read.csv("BD-occurrence/Peru/Bd-prevalence-data.csv")
bd.glob <- read.csv("BD-occurrence/Global/Bd-global-data.csv")
chels.pca <- rast(list.files("../Chelsa/PCA", "tif", full.names = T))
peru <- vect("Admin-layers/gadm41_PER.gpkg")
ref.r <- rast("Prevalence-maps/Prevalence-median-GeoStat.tif")
crs(ref.r) <- crs("EPSG:24892")
chels.peru <- crop(chels.pca, peru)
chels.peru <- project(chels.peru, crs(ref.r))
chels.peru <- project(chels.peru, crs(ref.r))
chels.peru <- mask(chels.peru, ref.r)
chels.peru <- resample(chels.peru, ref.r)
chels.peru <- mask(chels.peru, ref.r)
# Fitting ellipsoid
bd.glob.pres <- subset(bd.glob, SppDet > 0, Country != "Peru")
library(tidyr)
env.bd.glob <- extract(chels.pca, bd.glob.pres[, c("longitude", "latitude")]) |> data.frame() |> na.omit()
env.bd.glob <- extract(chels.pca, bd.glob.pres[, c("longitude", "latitude")]) |> data.frame()
names(bd.glob.pres)
env.bd.glob <- extract(chels.pca, bd.glob.pres[, c("longitude", "latitude")])
env.bd.glob <- terra::extract(chels.pca, bd.glob.pres[, c("longitude", "latitude")])
env.bd.glob <- terra::extract(chels.pca, bd.glob.pres[, c("longitude", "latitude")]) |> as.data.frame() |> na.omit()
combs <- combn(1:10, m = 4)
centres <- foreach(i = 1:ncol(combs)) %do% {
cov_center(env.bd.glob, mve = T, vars = names(env.bd.glob)[combs[, i]], level = 0.95)
}
dir.create("Bd-Suitability")
saveRDS(centres, "Bd-Suitability/Centres-covariances.rds")
ellip <- foreach(i = seq_along(centres), .combine = c) %do% {
lay <- dropLayer(chels.peru, i = which(!names(chels.peru) %in% names(env.bd.glob)[combs[, i]]))
fit <- ellipsoidfit(envlayers = lay,
centroid = centres[[i]]$centroid,
covar = centres[[i]]$covariance,
level = 0.95,
size = 1, plot = F)
return(fit$suitRaster)
}
library(raster)
chels.peru1 <- raster(chels.peru)
ellip <- foreach(i = seq_along(centres), .combine = c) %do% {
lay <- dropLayer(chels.peru1, i = which(!names(chels.peru1) %in% names(env.bd.glob)[combs[, i]]))
fit <- ellipsoidfit(envlayers = lay,
centroid = centres[[i]]$centroid,
covar = centres[[i]]$covariance,
level = 0.95,
size = 1, plot = F)
return(fit$suitRaster)
}
names(env.bd.glob)
names(chels.peru1)
library(terra)
library(ntbox)
library(foreach)
library(tidyr)
# Occurrence data
bd.per <- read.csv("BD-occurrence/Peru/Bd-prevalence-data.csv")
bd.glob <- read.csv("BD-occurrence/Global/Bd-global-data.csv")
chels.pca <- rast(list.files("../Chelsa/PCA", "tif", full.names = T))
peru <- vect("Admin-layers/gadm41_PER.gpkg")
ref.r <- rast("Prevalence-maps/Prevalence-median-GeoStat.tif")
crs(ref.r) <- crs("EPSG:24892")
chels.peru <- crop(chels.pca, peru)
chels.peru <- project(chels.peru, crs(ref.r))
chels.peru <- resample(chels.peru, ref.r)
chels.peru <- mask(chels.peru, ref.r)
plot(chels.peru)
# Fitting ellipsoid
bd.glob.pres <- subset(bd.glob, SppDet > 0, Country != "Peru")
env.bd.glob <- terra::extract(chels.pca, bd.glob.pres[, c("longitude", "latitude")]) |> as.data.frame() |> na.omit()
combs <- combn(1:10, m = 4)
centres <- foreach(i = 1:ncol(combs)) %do% {
cov_center(env.bd.glob, mve = T, vars = names(env.bd.glob)[combs[, i]], level = 0.95)
}
dir.create("Bd-Suitability")
saveRDS(centres, "Bd-Suitability/Centres-covariances.rds")
library(raster)
chels.peru1 <- raster(chels.peru)
i = 1
lay <- dropLayer(chels.peru1, i = which(!names(chels.peru1) %in% names(env.bd.glob)[combs[, i]]))
dropLayer(chels.peru1, 1)
lay <- raster::dropLayer(chels.peru1, i = which(!names(chels.peru1) %in% names(env.bd.glob)[combs[, i]]))
i = which(!names(chels.peru1) %in% names(env.bd.glob)[combs[, i]])
j = 1
lay <- raster::dropLayer(chels.peru1,
i = which(!names(chels.peru1) %in% names(env.bd.glob)[combs[, j]]))
b <- chels.peru[names(env.bd.glob)[combs[, j]]]
b <- chels.peru[[names(env.bd.glob)[combs[, j]]]
]
names(env.bd.glob)[combs[, j]]
names(env.bd.glob)
env.bd.glob <- env.bd.glob[, -1]
combs <- combn(1:10, m = 4)
centres <- foreach(i = 1:ncol(combs)) %do% {
cov_center(env.bd.glob, mve = T, vars = names(env.bd.glob)[combs[, i]], level = 0.95)
}
dir.create("Bd-Suitability")
saveRDS(centres, "Bd-Suitability/Centres-covariances.rds")
library(raster)
chels.peru1 <- raster(chels.peru)
lay <- dropLayer(chels.peru1,
i = which(!names(chels.peru1) %in% names(env.bd.glob)[combs[, j]]))
plot(chels.peru1)
chels.peru1 <- stack(chels.peru)
plot(chels.peru1)
lay <- dropLayer(chels.peru1,
i = which(!names(chels.peru1) %in% names(env.bd.glob)[combs[, j]]))
plot(lay)
ellip <- foreach(j = seq_along(centres), .combine = c) %do% {
lay <- dropLayer(chels.peru1,
i = which(!names(chels.peru1) %in% names(env.bd.glob)[combs[, j]]))
fit <- ellipsoidfit(envlayers = lay,
centroid = centres[[j]]$centroid,
covar = centres[[j]]$covariance,
level = 0.95,
size = 1, plot = F)
return(fit$suitRaster)
}
bd.pres <- subset(bd.per, N.positive > 0)
coordinates(bd.pres) <- ~ Longitude + Latitude
proj4string(bd.pres) <- CRS("+init=epsg:4326")
bd.pres <- subset(bd.per, N.positive > 0)
coordinates(bd.pres) <- ~ Longitude + Latitude
proj4string(bd.pres) <- CRS("+init=epsg:4326")
bd.pres <- spTransform(bd.pres, CRSobj = CRS(proj4string(chels.peru)))
bd.pres <- spTransform(bd.pres, CRSobj = CRS(proj4string(chels.peru1)))
proj4string(chels.peru1)
roc.tests <- lapply(ellip,
function(x){
pROC(continuous_mod = x,
test_data = coordinates(bd.pres),
n_iter = 1000,
E_percent = 5,
boost_percent = 50,
parallel = F,
rseed = 63193)
})
library(doParallel)
registerDoParallel(cores = 24)
roc.tests <- foreach(i = seq_along(ellip)) %dopar% {
pROC(continuous_mod = ellip[[i]],
test_data = coordinates(bd.pres),
n_iter = 1000,
E_percent = 5,
boost_percent = 50,
parallel = F,
rseed = 63193)
}
roc.results <- foreach(i = seq_along(roc.tests), .combine = rbind) %do%{
roc.tests[[i]]$pROC_summary
}
roc.results <-  data.frame(roc.results)
roc.results$Model <- paste0("DNC-", seq_along(roc.tests))
best.10 <- sort(roc.results$Mean_pAUC_ratio_at_5., decreasing = T)[1:10]
best.suits <- ellip[which(roc.results$Mean_pAUC_ratio_at_5. %in% best.10)]
write.csv(roc.results, "Bd-Suitability/Partial-roc-results.csv", row.names = F)
write.csv(roc.results[which(roc.results$Mean_pAUC_ratio_at_5. %in% best.10),],
"Bd-Suitability/Partial-roc-Best.csv", row.names = F)
for(i in 1:10){writeRaster(best.suits[[i]],
paste0("Bd-Suitability/DNC-",
which(roc.results$Mean_pAUC_ratio_at_5. %in% best.10)[i],
".csv"), "GTiff", overwrite = T)}
length(ellip)
prev <- rast("Prevalence-maps/Prevalence-median-GeoStat.tif")
suit <- rast("Bd-Suitability/DNC-175.tif")
div <- rast("Anuran-species/Peru-anuran-species-PSAD56.tif")
mod.data <- c(prev, suit, div)
crs(prev) <- crs("EPSG:24892")
suit <- resample(suit, prev)
div <- resample(div, prev)
csr(suit)
crs(suit)
crs(div)
crs(prev) <- crs("EPSG:24892")
suit <- resample(suit, prev)
div <- resample(div, prev)
model.data <- c(prev, suit, div)
suit <- project(suit, crs(prev))
div <- project(div, crs(prev))
model.data <- c(prev, suit, div)
library(terra)
prev <- rast("Prevalence-maps/Prevalence-median-GeoStat.tif")
suit <- rast("Bd-Suitability/DNC-175.tif")
div <- rast("Anuran-species/Peru-anuran-species-PSAD56.tif")
crs(prev) <- crs("EPSG:24892")
suit <- project(suit, crs(prev))
div <- project(div, crs(prev))
suit <- resample(suit, prev)
div <- resample(div, prev)
model.data <- c(prev, suit, div)
plot(model.data)
pairs(model.data)
model.data.df <- model.data |> as.data.frame()
library(ggplot2)
names(model.data.df)
names(model.data.df) <- c("Prevalence", "Suitability", "Richness")
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability))
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability))
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability), stat = "binhex")
model.data.df <- model.data |> as.data.frame() |> na.omit()
names(model.data.df) <- c("Prevalence", "Suitability", "Richness")
library(ggplot2)
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability), stat = "binhex")
install.packages("hexbin")
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability), stat = "binhex")
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability), stat = "count")
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability), stat = "log")
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability), stat = "binhex")
count
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability, fill = stat(log10(count))), stat = "binhex")
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability, fill = after_stat(log10(count))), stat = "binhex")
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Richness, fill = after_stat(log10(count))), stat = "binhex")
ggplot(model.data.df) + geom_hex(aes(x = Richness, y = Suitability, fill = after_stat(log10(count))), stat = "binhex")
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability, fill = after_stat(log10(count))), stat = "binhex") +
geom_smooth(aes(x = Prevalence, y = Suitability))
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Suitability, fill = after_stat(log10(count))), stat = "binhex") +
geom_smooth(aes(x = Prevalence, y = Suitability), colour = "red")
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Richness, fill = after_stat(log10(count))), stat = "binhex")+
geom_smooth(aes(x = Prevalence, y = Richness), colour = "red")
ggplot(model.data.df) + geom_hex(aes(x = Richness, y = Suitability, fill = after_stat(log10(count))), stat = "binhex")+
geom_smooth(aes(x = Richness, y = Suitability), colour = "red")
npas <- vect("Protected-areas/Peru-NPAs.gpkg")
crs(npas)
npas <- project(npas, crs(prev))
model.npas <- extract(model.data, npas)
model.npas
nrow(npas)
names(npas)
names(model.npas)
model.npas$ID
model.npas <- extract(model.data, npas, fun = "mean")
nrow(model.npas)
model.npas <- extract(model.data, npas, fun = "mean", na.rm = T)
head(model.npas)
npas <- cbind(npas, model.npas)
writeVector(npas,"Protected-areas/Peru-NPAs-BD-data.gpkg")
library(terra)
prev <- rast("Prevalence-maps/Prevalence-median-GeoStat.tif")
suit <- rast("Bd-Suitability/DNC-175.tif")
div <- rast("Anuran-species/Peru-anuran-species-PSAD56.tif")
crs(prev) <- crs("EPSG:24892")
suit <- project(suit, crs(prev))
div <- project(div, crs(prev))
suit <- resample(suit, prev)
div <- resample(div, prev)
model.data <- c(prev, suit, div)
model.data.df <- model.data |> as.data.frame() |> na.omit()
names(model.data.df) <- c("Prevalence", "Suitability", "Richness")
library(ggplot2)
library(viridis)
npas <- vect("Protected-areas/Peru-NPAs.gpkg")
npas <- project(npas, crs(prev))
model.npas <- extract(model.data, npas, fun = "mean", na.rm = T)
npas <- cbind(npas, model.npas)
spp <- vect("Anuran-species/Peru-Anurans.shp")
spp <- project(spp, crs("EPSG:24892"))
model.spp.mean <- extract(model.data, spp, fun = "mean", na.rm = T)[, -1]
model.spp.max <- extract(model.data, spp, fun = "max", na.rm = T)[, -1]
model.spp.sd <- extract(model.data, spp, fun = "sd", na.rm = T)[, -1]
names(model.spp.mean) <- paste0(names(model.spp.mean), ".mean")
names(model.spp.max) <- paste0(names(model.spp.max), ".max")
names(model.spp.sd) <- paste0(names(model.spp.sd), ".sd")
spp.model <- cbind(spp, model.spp.mean,
model.spp.max, model.spp.sd)
names(spp.model)
spp.mod.df <- spp.model |> as.data.frame()
cons.stat <-read.csv("Anuran-species/Conservation-status.csv")
spp.mod.df$BINOMIAL
spp.mod.df$Status <- NA
for(i in 1:nrow(spp.mod.df)){
id <- which(cons.stat$scientificName == spp.mod.df$BINOMIAL[i])
spp.mod.df$Status[i] <- cons.stat$redlistCategory[id]
}
i
id <- which(cons.stat$scientificName == spp.mod.df$BINOMIAL[i])
id
length(id)
length(id) == 0
for(i in 1:nrow(spp.mod.df)){
id <- which(cons.stat$scientificName == spp.mod.df$BINOMIAL[i])
if(length(id) == 0){
next
} else {
spp.mod.df$Status[i] <- cons.stat$redlistCategory[id]
}
}
which(cons.stat$scientificName !%in% spp.mod.df$BINOMIAL)
which(!cons.stat$scientificName %in% spp.mod.df$BINOMIAL)
ggplot(spp.mod.df) + geom_boxplot(aes(x = Status, y = prevalence.mean))
names(spp.mod.df)
ggplot(spp.mod.df) + geom_boxplot(aes(x = Status, y = `DNC-175.mean`))

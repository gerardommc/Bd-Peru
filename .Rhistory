ggplot(model.data.df) + geom_hex(aes(x = Suitability, y = Prevalence, fill = after_stat(log10(count))), stat = "binhex") +
geom_smooth(aes(x = Suitability, y = Prevalence), colour = "red") +
scale_fill_gradientn(colours = viridis(100)) +
labs(fill = expression(log[10] (count)))
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Richness, fill = after_stat(log10(count))), stat = "binhex")+
geom_smooth(aes(x = Prevalence, y = Richness), colour = "red")+
scale_fill_gradientn(colours = viridis(100))+
labs(fill = expression(log[10] (count)))
ggplot(model.data.df) + geom_hex(aes(x = Suitability, y = Richness, fill = after_stat(log10(count))), stat = "binhex")+
geom_smooth(aes(x = Suitability, y = Richness), colour = "red")+
scale_fill_gradientn(colours = viridis(100))+
labs(fill = expression(log[10] (count)))
ggplot(model.data.df) + geom_hex(aes(x = Suitability, y = Prevalence, fill = after_stat(log10(count))), stat = "binhex") +
geom_smooth(aes(x = Suitability, y = Prevalence), colour = "red") +
scale_fill_gradientn(colours = viridis(100)) +
labs(fill = expression(log[10] (count)))
ggplot(model.data.df) + geom_hex(aes(x = Prevalence, y = Richness, fill = after_stat(log10(count))), stat = "binhex")+
geom_smooth(aes(x = Prevalence, y = Richness), colour = "red")+
scale_fill_gradientn(colours = viridis(100))+
labs(fill = expression(log[10] (count)))
ggplot(model.data.df) + geom_hex(aes(x = Suitability, y = Richness, fill = after_stat(log10(count))), stat = "binhex")+
geom_smooth(aes(x = Suitability, y = Richness), colour = "red")+
scale_fill_gradientn(colours = viridis(100))+
labs(fill = expression(log[10] (count)))
npas <- vect("Protected-areas/Peru-NPAs.gpkg")
npas <- project(npas, crs(prev))
model.npas <- extract(model.data, npas, fun = "mean", na.rm = T)
npas <- cbind(npas, model.npas)
spp <- vect("Anuran-species/Peru-Anurans.shp")
spp <- project(spp, crs("EPSG:24892"))
model.spp.mean <- extract(model.data, spp, fun = "mean", na.rm = T)[, -1]
model.spp.max <- extract(model.data, spp, fun = "max", na.rm = T)[, -1]
model.spp.sd <- extract(model.data, spp, fun = "sd", na.rm = T)[, -1]
names(model.spp.mean) <- paste0(names(model.spp.mean), ".mean")
names(model.spp.max) <- paste0(names(model.spp.max), ".max")
names(model.spp.sd) <- paste0(names(model.spp.sd), ".sd")
library(sf); library(tidyverse)
spp2 <- st_read("Anuran-species/Peru-Anurans.shp")
areas <- st_area(spp2)
spp.model <- cbind(spp, model.spp.mean,
model.spp.max, model.spp.sd)
spp.model$Area <- as.numeric(areas/1e+7)
spp.mod.df <- spp.model |> as.data.frame()
cons.stat <-read.csv("Anuran-species/Conservation-status.csv")
spp.mod.df$Status <- NA
for(i in 1:nrow(spp.mod.df)){
id <- which(cons.stat$scientificName == spp.mod.df$BINOMIAL[i])
if(length(id) == 0){
next
} else {
spp.mod.df$Status[i] <- cons.stat$redlistCategory[id]
}
}
NAs <- is.na(spp.mod.df$Status)
spp.mod.df$Status[NAs] <- "No information"
st <- factor(spp.mod.df$Status)
st <- ordered(st, c("Critically Endangered", "Endangered", "Vulnerable",
"Near Threatened", "Data Deficient",
"No information", "Least Concern"))
spp.mod.df$Status <- st
spp.mod.df <- na.omit(spp.mod.df)
library(ggplot2)
ggplot(spp.mod.df) + geom_boxplot(aes(x = Status, y = prevalence.mean)) +
labs(y = "Prevalence", x = "IUCN Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(spp.mod.df) + geom_boxplot(aes(x = Status, y = log10(Area))) +
labs(y = expression(log[10](Area)), x = "IUCN Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(spp.mod.df) + geom_boxplot(aes(x = Status, y = `DNC-175.mean`)) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(y = "Suitability", x = "IUCN Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(spp.mod.df) + geom_point(aes(x = log((prevalence.mean+0.01)/(1-(prevalence.mean+0.01))),
y = log10(Area), colour = Status, size = prevalence.sd),
alpha = 0.5) +
stat_ellipse(aes(x = log(prevalence.mean/(1-prevalence.mean)), y = log10(Area), colour = Status)) +
labs(x = "log(Odds ratio)", y = expression(log[10](Area)),
size = "Prevalence S. D.", colour = "IUCN status") +
theme_bw()
ggplot(spp.mod.df) + geom_point(aes(x = `DNC-175.mean`,
y = log10(Area), colour = Status, size = `DNC-175.sd`),
alpha = 0.5) +
stat_ellipse(aes(x = `DNC-175.mean`, y = log10(Area), colour = Status)) +
labs(x = "Suitability", y = expression(log[10](Area)),
size = "Prevalence S. D.", colour = "IUCN status") +
theme_bw()
spp.mod.df$OR <- with(spp.mod.df, (prevalence.mean+0.01)/(1 - (prevalence.mean + 0.01)))
mod <- lm(log(Area) ~ Status + log(OR):Status, data = spp.mod.df)
summary(mod)
pairs(model.data)
with(spp.mod.df, plot(OR, `DNC-175.mean`))
with(spp.mod.df, plot(log(OR), `DNC-175.mean`))
with(spp.mod.df, plot(log(OR), log(`DNC-175.mean`)))
with(spp.mod.df, plot(log(OR), `DNC-175.mean`))
ggplot(spp.mod.df) + geom_point(aes(x = `DNC-175.mean`,
y = log10(Area), colour = Status, size = `DNC-175.sd`),
alpha = 0.5) +
stat_ellipse(aes(x = `DNC-175.mean`, y = log10(Area), colour = Status)) +
labs(x = "Suitability", y = expression(log[10](Area)),
size = "Prevalence S. D.", colour = "IUCN status") +
theme_bw()
mod.status <- lm(Status ~ log(OR) + `DNC-175.mean`, spp.mod.df)
mod.status <- lm(numeric(Status) ~ log(OR) + `DNC-175.mean`, spp.mod.df)
mod.status <- lm(Status ~ log(OR) + `DNC-175.mean`, spp.mod.df)
summary(mod.status)
as.numeric(spp.mod.df$Status)
spp.mod.df$Status.num <- as.numeric(spp.mod.df$Status)
mod.status <- lm(Status.num ~ log(OR) + `DNC-175.mean`, spp.mod.df)
summary(mod.status)
ggplot(spp.mod.df) + geom_point(aes(x = log(OR), y = Status.num))
ggplot(spp.mod.df) + geom_point(aes(x = log(OR), y = Status.num)) +
geom_smooth(aes(x = log(OR) + y = Status.num))
ggplot(spp.mod.df) + geom_point(aes(x = log(OR), y = Status.num)) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm")
ggplot(spp.mod.df) + geom_point(aes(x = log(OR), y = Status)) +
geom_smooth(aes(x = log(OR), y = Status), method = "lm")
ggplot(spp.mod.df) + geom_point(aes(x = log(OR), y = Status)) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm")
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status)) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm")
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status, fill = Status)) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm")
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm")
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "grey")
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey")
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
geom_point(aes(x = log(OR), y = Status)) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey")
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
geom_point(aes(x = log(OR), y = Status), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey")
rev(c("Critically Endangered", "Endangered", "Vulnerable",
"Near Threatened", "Data Deficient",
"No information", "Least Concern"))
st <- factor(spp.mod.df$Status)
spp.mod.df$Status <- NA
for(i in 1:nrow(spp.mod.df)){
id <- which(cons.stat$scientificName == spp.mod.df$BINOMIAL[i])
if(length(id) == 0){
next
} else {
spp.mod.df$Status[i] <- cons.stat$redlistCategory[id]
}
}
NAs <- is.na(spp.mod.df$Status)
spp.mod.df$Status[NAs] <- "No information"
st <- factor(spp.mod.df$Status)
st <- ordered(st, c("Least Concern", "No information", "Data Deficient", "Near Threatened",
"Vulnerable", "Endangered", "Critically Endangered"))
spp.mod.df$Status <- st
spp.mod.df <- na.omit(spp.mod.df)
library(ggplot2)
ggplot(spp.mod.df) + geom_boxplot(aes(x = Status, y = prevalence.mean)) +
labs(y = "Prevalence", x = "IUCN Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(spp.mod.df) + geom_boxplot(aes(x = Status, y = log10(Area))) +
labs(y = expression(log[10](Area)), x = "IUCN Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(spp.mod.df) + geom_boxplot(aes(x = Status, y = `DNC-175.mean`)) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(y = "Suitability", x = "IUCN Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(spp.mod.df) + geom_point(aes(x = log((prevalence.mean+0.01)/(1-(prevalence.mean+0.01))),
y = log10(Area), colour = Status, size = prevalence.sd),
alpha = 0.5) +
stat_ellipse(aes(x = log(prevalence.mean/(1-prevalence.mean)), y = log10(Area), colour = Status)) +
labs(x = "log(Odds ratio)", y = expression(log[10](Area)),
size = "Prevalence S. D.", colour = "IUCN status") +
theme_bw()
ggplot(spp.mod.df) + geom_point(aes(x = `DNC-175.mean`,
y = log10(Area), colour = Status, size = `DNC-175.sd`),
alpha = 0.5) +
stat_ellipse(aes(x = `DNC-175.mean`, y = log10(Area), colour = Status)) +
labs(x = "Suitability", y = expression(log[10](Area)),
size = "Prevalence S. D.", colour = "IUCN status") +
theme_bw()
spp.mod.df$OR <- with(spp.mod.df, (prevalence.mean+0.01)/(1 - (prevalence.mean + 0.01)))
mod <- lm(log(Area) ~ Status + log(OR):Status, data = spp.mod.df)
summary(mod)
dir.create("Results")
sink("Results/Model-Area-prevalence-status.txt", type = "output")
summary(mod)
sink()
mod.suit <- lm(log(Area) ~ Status + `DNC-175.mean`:Status, data = spp.mod.df)
summary(mod.suit)
sink("Results/Model-Area-Suitability-status.txt", type = "output")
summary(mod.suit)
sink()
pdf("Results/Lin-mod-diag-suit.pdf", width = 5, height = 5)
plot(mod.suit)
dev.off()
spp.mod.df$Status.num <- as.numeric(spp.mod.df$Status)
mod.status <- lm(Status.num ~ log(OR) + `DNC-175.mean`, spp.mod.df)
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
geom_point(aes(x = log(OR), y = Status), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey")
mod.status <- lm(Status.num ~ log(OR) + `DNC-175.mean` + Area, spp.mod.df)
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
geom_point(aes(x = log(OR), y = Status), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey")
summary(mod.status)
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
geom_point(aes(x = log(OR), y = Status, size = `Area`), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey")
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
geom_point(aes(x = log(OR), y = Status, size = Area), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey")
ggplot(spp.mod.df) + geom_bar(aes(x = Status))
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
geom_point(aes(x = log(OR), y = Status, size = Area), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey") +
theme_bw()
ggplot(spp.mod.df) + geom_bar(aes(x = Status), alpha = 0.5) +
theme_bw()
ggplot(spp.mod.df) + geom_bar(aes(x = Status), alpha = 0.5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(spp.mod.df) + geom_bar(aes(x = Status), alpha = 0.5) +
labs(x = "IUCN status", y = "No. of species") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
geom_point(aes(x = log(OR), y = Status, size = Area), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey") +
theme_bw()
sink("Results/Lin-mod-status.txt", type = "output")
summary(mod.status)
sink()
pdf("Results/Lin-mod-diag-Status.pdf", width = 5, height = 5)
plot(mod.status)
dev.off()
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
geom_point(aes(x = log(OR), y = Status, size = Area), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey") +
theme_bw()
plot(mod.status)
summary(mod.status)
plot("Status-cor-prev-suit-area.pdf", width = 6, height = 5)
pdf("Results/Lin-mod-diag-Status.pdf", width = 5, height = 5)
plot(mod.status)
dev.off()
plot("Status-cor-prev-suit-area.pdf", width = 6, height = 5)
pdf("Status-cor-prev-suit-area.pdf", width = 6, height = 5)
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
geom_point(aes(x = log(OR), y = Status, size = Area), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey") +
theme_bw()
ggplot(spp.mod.df) + geom_bar(aes(x = Status), alpha = 0.5) +
labs(x = "IUCN status", y = "No. of species") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
dev.off()
pdf("Status-cor-prev-suit-area.pdf", width = 7, height = 5)
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
labs(x = "log(Odds ratio)", y = "IUCN status") +
geom_point(aes(x = log(OR), y = Status, size = Area), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey") +
theme_bw()
ggplot(spp.mod.df) + geom_bar(aes(x = Status), alpha = 0.5) +
labs(x = "IUCN status", y = "No. of species") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
dev.off()
pdf("Status-cor-prev-suit-area.pdf", width = 7, height = 5)
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
labs(x = "log(Odds ratio)", y = "IUCN status", size = "Range\n rize") +
geom_point(aes(x = log(OR), y = Status, size = Area), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey") +
theme_bw()
ggplot(spp.mod.df) + geom_bar(aes(x = Status), alpha = 0.5) +
labs(x = "IUCN status", y = "No. of species") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
dev.off()
pdf("Status-cor-prev-suit-area.pdf", width = 7, height = 5)
ggplot(spp.mod.df) + geom_boxplot(aes(x = log(OR), y = Status), alpha = 0.5, outlier.size = 0) +
labs(x = "log(Odds ratio)", y = "IUCN status", size = "Range \nsize") +
geom_point(aes(x = log(OR), y = Status, size = Area), alpha = 0.2) +
geom_smooth(aes(x = log(OR), y = Status.num), method = "lm", colour = "darkgrey") +
theme_bw()
ggplot(spp.mod.df) + geom_bar(aes(x = Status), alpha = 0.5) +
labs(x = "IUCN status", y = "No. of species") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
dev.off()
# Rscript to select and fit model based geostatistical model for Bd
# Reading Bd data
bd.dat <- read.csv("BD-occurrence/Peru/Bd-prevalence-data.csv")
bd.dat$logit.prev <- with(bd.dat, log(Prevalence/(1 - Prevalence)))
bd.dat$logit.prev[bd.dat$logit.prev == -Inf] <- -5
bd.dat$logit.prev[bd.dat$logit.prev == Inf] <- 5
# Extracting environmental raster data
library(terra)
lst <- rast(list.files("Environment-raster/LST/", full.names = T))
ndvi <- rast(list.files("Environment-raster/NDVI/", full.names = T))
topo <- rast(list.files("Environment-raster/Topo/", full.names = T))
lst.m <- global(lst, mean, na.rm = T)
ndvi.m <- global(ndvi, mean, na.rm = T)
topo.m <- global(topo, mean, na.rm = T)
lst.sd <- global(lst, sd, na.rm = T)
ndvi.sd <- global(ndvi, sd, na.rm = T)
topo.sd <- global(topo, sd, na.rm = T)
lst <- (lst - lst.m$mean)/lst.sd$sd
ndvi <- (ndvi - ndvi.m$mean)/ndvi.sd$sd
topo <- (topo - topo.m$mean)/topo.sd$sd
bd.dat.psad <- bd.dat
names(bd.dat.psad)[c(1, 2)] <- c("lon", "lat")
bd.dat.psad <- vect(bd.dat.psad)# ~ Longitude + Latitude
crs(bd.dat.psad) <- "EPSG:4326"
bd.dat.psad <- project(bd.dat.psad, crs(lst))
# Fitting glm model
lst.dat <- data.frame(extract(lst, bd.dat.psad))
ndvi.dat <- data.frame(extract(ndvi, bd.dat.psad))
topo.dat <- data.frame(extract(topo, bd.dat.psad))
lst.reg <- cbind(bd.dat[, c("N.sampled", "N.positive")], lst.dat)
ndvi.reg <- cbind(bd.dat[, c("N.sampled", "N.positive")], ndvi.dat)
topo.reg <- cbind(bd.dat[, c("N.sampled", "N.positive")], topo.dat)
# lst model
m1.lst <- glm(cbind(N.positive, N.sampled - N.positive) ~ LST.PCA.1 + LST.PCA.2 +
LST.PCA.3+LST.PCA.4+
I(LST.PCA.1^2) +
I(LST.PCA.3^2) +
I(LST.PCA.5^2),
lst.reg,
family = binomial)
m2.lst <- step(m1.lst)
summary(m2.lst)
AIC(m2.lst)
plot(m2.lst)
m1.ndvi <- glm(cbind(N.positive, N.sampled - N.positive) ~ NDVI.PCA.1 + NDVI.PCA.2 +
NDVI.PCA.3+
I(NDVI.PCA.1^2) +
I(NDVI.PCA.2^2) +
I(NDVI.PCA.3^2),
ndvi.reg,
family = binomial)
m2.ndvi <- step(m1.ndvi)
summary(m2.ndvi)
AIC(m2.ndvi)
plot(m2.ndvi)
joint.reg <- cbind(bd.dat[, c("N.sampled", "N.positive")], lst.dat, ndvi.dat)
m1.joint <-  glm(cbind(N.positive, N.sampled - N.positive) ~ LST.PCA.1 +
LST.PCA.3 +
LST.PCA.4 +
I(LST.PCA.1^2) +
I(LST.PCA.5^2),
joint.reg,
family = binomial)
m2.joint <- step(m1.joint)
summary(m2.joint)
AIC(m2.joint)
# ndvi, lst, topo
all.reg <- cbind(bd.dat[, c("N.sampled", "N.positive")], lst.dat, ndvi.dat, topo.dat)
m1.all <- glm(cbind(N.positive, N.sampled - N.positive) ~ LST.PCA.1 +
LST.PCA.3 +
LST.PCA.4 +
NDVI.PCA.1 +
Topo.PCA.2 + Topo.PCA.3 + Topo.PCA.4 +
I(LST.PCA.1^2) +
I(LST.PCA.5^2) +
I(NDVI.PCA.1^2) +
I(Topo.PCA.2^2) + I(Topo.PCA.3^2) + I(Topo.PCA.4^2),
all.reg,
family = binomial)
m2.all <- step(m1.all)
summary(m2.all)
anova(m2.all, m2.lst)
plot(m2.all)
#All interactions with NDVI
m1.ints <- glm(cbind(N.positive, N.sampled - N.positive) ~ NDVI.PCA.1 * (LST.PCA.1 +
LST.PCA.3 +
LST.PCA.4 +
Topo.PCA.2 + Topo.PCA.3 + Topo.PCA.4 +
I(LST.PCA.1^2) +
I(LST.PCA.5^2) +
I(Topo.PCA.2^2) + I(Topo.PCA.3^2) + I(Topo.PCA.4^2)) +
I(NDVI.PCA.1^2),
all.reg,
family = binomial)
m2.ints <- step(m1.ints)
summary(m2.ints)
m3.ints <- update(m2.ints, .~. - LST.PCA.4)
summary(m3.ints)
m4.ints <- update(m3.ints, .~. - LST.PCA.3)
summary(m4.ints)
m5.ints <- update(m4.ints, .~. -I(Topo.PCA.2^2))
summary(m5.ints)
AIC(m5.ints, m4.ints, m3.ints, m2.ints, m1.ints)
## gam
library(mgcv)
xy.l <- bd.dat.psad@ptr$coordinates()
xy <- data.frame(x = xy.l[[1]], y = xy.l[[2]])
all.reg.gam <- data.frame(xy, all.reg)
m2.ints.gam <- gam(cbind(N.positive, N.sampled - N.positive) ~ NDVI.PCA.1 + LST.PCA.1 +
LST.PCA.3 + Topo.PCA.3 + Topo.PCA.4 + I(LST.PCA.1^2) + I(Topo.PCA.2^2) +
I(Topo.PCA.3^2) + I(NDVI.PCA.1^2) + NDVI.PCA.1:LST.PCA.1 +
NDVI.PCA.1:LST.PCA.3 + NDVI.PCA.1:Topo.PCA.3 + NDVI.PCA.1:I(LST.PCA.1^2) +
NDVI.PCA.1:I(Topo.PCA.2^2) + NDVI.PCA.1:I(Topo.PCA.3^2) + ti(x, y),
data = all.reg.gam, family = binomial())
## Predictions for m2.ints
predictors.r <- c(lst, ndvi, topo)
names(predictors.r) <- names(all.reg)[-c(1:3, 9, 13)]
#predictors.r <- aggregate(predictors.r, 2)
predictors <- as.data.frame(predictors.r, xy = T)
#names(predictors) <- c("x", "y", names(predictors)[-c(1, 2)])
predictors <- na.omit(predictors)
grid.pred <- predictors[, c("x", "y")]
#names(predictors) <- names(all.reg)[c(6:10, 12:14, 16:19)]
preds <- predict(m2.ints, newdata = predictors)
preds.r <- rast(data.frame(grid.pred, preds))
preds.r.logit <- exp(preds.r)/(1+exp(preds.r))
plot(preds.r.logit)
points(all.reg.gam[, c("x", "y")])
library(geoR)
vari <- variog(coords=xy,data=bd.dat.psad$logit.prev, angles = F)
plot(vari,xlab="distance (metres)")
vari.fit <- variofit(vari,ini.cov.pars=c(0.1,0.5),cov.model="matern",
fix.nugget=FALSE,nugget=3,
fix.kappa=FALSE,kappa=0.1,
minimisation.function = "nlm")
lines(vari.fit)
vari.fit
summary(vari.fit)
# Fitting geostatistical model
library(PrevMap)
params <- c(coef(m2.ints),vari.fit$cov.pars,vari.fit$nugget)     #c(beta,sigma2,phi,tau2)
data <- cbind(xy, all.reg)
mcmc.1 <- control.mcmc.MCML(n.sim=50000,burnin=5000,thin=45,h=(1.65)/(nrow(data)^(1/6)))
start.1 <- c(params[length(params)],params[length(params) - 1]/params[length(params)-1])     #starting values of phi and the relative variance of the nugget effect nu2 respectively
# Fitting geo-statistical model
fit.MCML.1 <- binomial.logistic.MCML(formula=N.positive ~  NDVI.PCA.1 + LST.PCA.1 +
LST.PCA.3 + Topo.PCA.3 + Topo.PCA.4 + I(LST.PCA.1^2) + I(Topo.PCA.2^2) +
I(Topo.PCA.3^2) + I(NDVI.PCA.1^2) + NDVI.PCA.1:LST.PCA.1 +
NDVI.PCA.1:LST.PCA.3 + NDVI.PCA.1:Topo.PCA.3 + NDVI.PCA.1:I(LST.PCA.1^2) +
NDVI.PCA.1:I(Topo.PCA.2^2) + NDVI.PCA.1:I(Topo.PCA.3^2),
units.m=~ N.sampled,
par0= params,
coords=~x+y,
data=data,
control.mcmc=mcmc.1,
kappa=0.5,
start.cov.pars=start.1)
summary(fit.MCML.1)
library(splancs)
predictors.r <- c(lst, ndvi, topo)
predictors.r <- aggregate(predictors.r, 2)
predictors <- as.data.frame(predictors.r, xy = T)
predictors <- na.omit(predictors)
grid.pred <- predictors[, c("x", "y")]
names(predictors)[c(3:14)] <- names(data)[c(6:10, 12:14, 16:19)]
pred.MCML <- spatial.pred.binomial.MCML(fit.MCML.1,
grid.pred=grid.pred,
predictors=predictors,
control.mcmc=mcmc.1,
type="joint",
scale.predictions="prevalence",
standard.errors=TRUE,
scale.thresholds="prevalence",
thresholds = c(0.025, 0.19, 0.5, 0.69, 0.975))
plot(pred.MCML, type = "prevalence")
prevalence <- rast(data.frame(grid.pred, prevalence = pred.MCML$prevalence$predictions))
exceed <- rast(data.frame(grid.pred, pred.MCML$exceedance.prob))
m.fin <- m1.lst <- glm(cbind(N.positive, N.sampled - N.positive) ~ NDVI.PCA.1 + LST.PCA.1 +
LST.PCA.3 + Topo.PCA.3 + Topo.PCA.4 + I(LST.PCA.1^2) + I(Topo.PCA.2^2) +
I(Topo.PCA.3^2) + I(NDVI.PCA.1^2) + NDVI.PCA.1:LST.PCA.1 +
NDVI.PCA.1:LST.PCA.3 + NDVI.PCA.1:Topo.PCA.3 + NDVI.PCA.1:I(LST.PCA.1^2) +
NDVI.PCA.1:I(Topo.PCA.2^2) + NDVI.PCA.1:I(Topo.PCA.3^2),
lst.reg,
family = binomial)
m.fin <- m1.lst <- glm(cbind(N.positive, N.sampled - N.positive) ~ NDVI.PCA.1 + LST.PCA.1 +
LST.PCA.3 + Topo.PCA.3 + Topo.PCA.4 + I(LST.PCA.1^2) + I(Topo.PCA.2^2) +
I(Topo.PCA.3^2) + I(NDVI.PCA.1^2) + NDVI.PCA.1:LST.PCA.1 +
NDVI.PCA.1:LST.PCA.3 + NDVI.PCA.1:Topo.PCA.3 + NDVI.PCA.1:I(LST.PCA.1^2) +
NDVI.PCA.1:I(Topo.PCA.2^2) + NDVI.PCA.1:I(Topo.PCA.3^2),
all.reg,
family = binomial)
summary(m.fin)
dir.create("Prevalence-maps")
#writing up results
writeRaster(prevalence, "Prevalence-maps/Prevalence-median-GeoStat.tif")
for(i in 1:5)writeRaster(exceed[[i]], paste0("Prevalence-maps/Exceedence-prob-", c("025", "19", "50" , "69", "975")[i], ".tif"))
#writing up results
writeRaster(prevalence, "Prevalence-maps/Prevalence-median-GeoStat.tif", overwrite = T)
for(i in 1:5)writeRaster(exceed[[i]], paste0("Prevalence-maps/Exceedence-prob-", c("025", "19", "50" , "69", "975")[i], ".tif"),
overwrite = T)
dir.create("Model-results")
saveRDS(fit.MCML.1, "Model-results/Bd-GeoStat-Prevalence.rds")
sink("Model-results/GeoStat-model.txt")
fit.MCML.1
sink()
m.fin <- m1.lst <- glm(cbind(N.positive, N.sampled - N.positive) ~ NDVI.PCA.1 + LST.PCA.1 +
LST.PCA.3 + Topo.PCA.3 + Topo.PCA.4 + I(LST.PCA.1^2) + I(Topo.PCA.2^2) +
I(Topo.PCA.3^2) + I(NDVI.PCA.1^2) + NDVI.PCA.1:LST.PCA.1 +
NDVI.PCA.1:LST.PCA.3 + NDVI.PCA.1:Topo.PCA.3 + NDVI.PCA.1:I(LST.PCA.1^2) +
NDVI.PCA.1:I(Topo.PCA.2^2) + NDVI.PCA.1:I(Topo.PCA.3^2),
all.reg,
family = binomial)
sink("Results/Bin-model-final.txt", type = "output")
summary(m.fin)
sink()
sink("Model-results/Bin-model-final.txt", type = "output")
summary(m.fin)
sink()
